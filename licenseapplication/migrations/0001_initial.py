# Generated by Django 5.1.7 on 2025-06-30 05:45

import django.db.models.deletion
import licenseapplication.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LicenseApplication',
            fields=[
                ('application_id', models.CharField(db_index=True, max_length=30, primary_key=True, serialize=False)),
                ('excise_district', models.CharField(max_length=100)),
                ('license_category', models.CharField(max_length=100)),
                ('excise_subdivision', models.CharField(max_length=100)),
                ('license', models.CharField(max_length=100)),
                ('license_type', models.CharField(max_length=100)),
                ('establishment_name', models.CharField(max_length=255)),
                ('mobile_number', models.BigIntegerField()),
                ('email', models.EmailField(db_column='email', max_length=254)),
                ('license_no', models.BigIntegerField(blank=True, null=True)),
                ('initial_grant_date', models.DateField(blank=True, null=True)),
                ('renewed_from', models.DateField(blank=True, null=True)),
                ('valid_up_to', models.DateField(blank=True, null=True)),
                ('yearly_license_fee', models.CharField(blank=True, max_length=100, null=True)),
                ('license_nature', models.CharField(max_length=100)),
                ('functioning_status', models.CharField(max_length=100)),
                ('mode_of_operation', models.CharField(max_length=100)),
                ('site_subdivision', models.CharField(max_length=100)),
                ('police_station', models.CharField(max_length=100)),
                ('location_category', models.CharField(max_length=100)),
                ('location_name', models.CharField(max_length=100)),
                ('ward_name', models.CharField(max_length=100)),
                ('business_address', models.TextField()),
                ('road_name', models.CharField(max_length=100)),
                ('pin_code', models.IntegerField()),
                ('latitude', models.CharField(blank=True, max_length=50, null=True)),
                ('longitude', models.CharField(blank=True, max_length=50, null=True)),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('company_address', models.TextField(blank=True, null=True)),
                ('company_pan', models.CharField(blank=True, max_length=20, null=True)),
                ('company_cin', models.CharField(blank=True, max_length=30, null=True)),
                ('incorporation_date', models.DateField(blank=True, null=True)),
                ('company_phone_number', models.BigIntegerField(blank=True, null=True)),
                ('company_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('status', models.CharField(max_length=100)),
                ('member_name', models.CharField(max_length=100)),
                ('father_husband_name', models.CharField(max_length=100)),
                ('nationality', models.CharField(max_length=50)),
                ('gender', models.CharField(max_length=10)),
                ('pan', models.CharField()),
                ('member_mobile_number', models.BigIntegerField()),
                ('member_email', models.EmailField(max_length=254)),
                ('photo', models.ImageField(upload_to=licenseapplication.models.upload_document_path)),
                ('current_stage', models.CharField(choices=[('draft', 'Draft'), ('applicant_applied', 'Applicant Applied'), ('level_1', 'Level 1'), ('level_1_objection', 'Level 1 Objection'), ('level_2', 'Level 2'), ('level_3', 'Level 3'), ('level_3_objection', 'Level 3 Objection'), ('level_4', 'Level 4'), ('level_5', 'Level 5'), ('payment_notification', 'Payment Notification'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='draft', max_length=30)),
                ('is_approved', models.BooleanField(default=False)),
                ('print_count', models.PositiveIntegerField(default=0)),
                ('is_print_fee_paid', models.BooleanField(default=False)),
                ('is_fee_calculated', models.BooleanField(default=False)),
                ('is_license_category_updated', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'license_application',
            },
        ),
        migrations.CreateModel(
            name='LocationFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(max_length=100, unique=True)),
                ('fee_amount', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'location_fee',
            },
        ),
        migrations.CreateModel(
            name='LicenseApplicationTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(choices=[('applicant_applied', 'Applicant Applied'), ('level_1', 'Level 1'), ('level_1_objection', 'Level 1 Objection'), ('level_2', 'Level 2'), ('level_3', 'Level 3'), ('level_3_objection', 'Level 3 Objection'), ('level_4', 'Level 4'), ('level_5', 'Level 5'), ('payment_notification', 'Payment Notification'), ('approved', 'Approved'), ('rejected', 'Rejected')], max_length=30)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('forwarded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='forwarded_by_transactions', to=settings.AUTH_USER_MODEL)),
                ('forwarded_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='forwarded_to_transactions', to=settings.AUTH_USER_MODEL)),
                ('license_application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='licenseapplication.licenseapplication')),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='performed_transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'license_application_transaction',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Objection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(db_index=True, max_length=255)),
                ('remarks', models.TextField()),
                ('is_resolved', models.BooleanField(db_index=True, default=False)),
                ('raised_on', models.DateTimeField(auto_now_add=True)),
                ('resolved_on', models.DateTimeField(blank=True, null=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='licenseapplication.licenseapplication')),
                ('raised_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'license_application_objection',
                'ordering': ['raised_on'],
            },
        ),
        migrations.CreateModel(
            name='SiteEnquiryReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_traditional_place', models.BooleanField()),
                ('traditional_place_distance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('traditional_place_name', models.CharField(blank=True, max_length=1000)),
                ('traditional_place_nature', models.CharField(blank=True, max_length=1000)),
                ('traditional_place_construction', models.CharField(blank=True, choices=[('rcc', 'RCC'), ('wooden_structure', 'Wooden Structure'), ('temporary', 'Temporary')], max_length=100, null=True)),
                ('has_educational_institution', models.BooleanField()),
                ('educational_institution_distance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('educational_institution_name', models.CharField(blank=True, max_length=1000)),
                ('educational_institution_nature', models.CharField(blank=True, max_length=1000)),
                ('has_hospital', models.BooleanField()),
                ('hospital_distance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('hospital_name', models.CharField(blank=True, max_length=1000)),
                ('has_taxi_stand', models.BooleanField()),
                ('taxi_stand_name', models.CharField(blank=True, max_length=1000)),
                ('taxi_stand_distance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_interconnected_with_shops', models.BooleanField()),
                ('interconnectivity_remarks', models.TextField(blank=True, max_length=1000)),
                ('enquiry_officer_comments', models.TextField(blank=True, max_length=2000)),
                ('shop_construction_type', models.CharField(choices=[('rcc', 'RCC'), ('wooden_structure', 'Wooden Structure'), ('temporary', 'Temporary')], max_length=100)),
                ('has_excise_shops_nearby', models.BooleanField()),
                ('nearby_excise_shop_count', models.IntegerField(default=0)),
                ('nearby_excise_shops_remarks', models.TextField(blank=True, max_length=2000)),
                ('is_on_highway', models.BooleanField()),
                ('highway_name', models.TextField(blank=True, max_length=2000)),
                ('shop_image_document', models.FileField(upload_to='site_enquiry/')),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('is_shop_size_correct', models.BooleanField()),
                ('shop_size_remarks', models.TextField(blank=True, max_length=2000)),
                ('additional_enquiry_officer_comments', models.TextField(blank=True, max_length=2000)),
                ('has_id_proof', models.BooleanField()),
                ('id_proof_comments', models.TextField(blank=True, max_length=1000)),
                ('has_age_proof', models.BooleanField()),
                ('age_proof_comments', models.TextField(blank=True, max_length=1000)),
                ('has_noc_from_landlord', models.BooleanField()),
                ('noc_comments', models.TextField(blank=True, max_length=1000)),
                ('has_ownership_proof', models.BooleanField()),
                ('ownership_proof_comments', models.TextField(blank=True, max_length=1000)),
                ('has_trade_license', models.BooleanField()),
                ('trade_license_comments', models.TextField(blank=True, max_length=1000)),
                ('proposes_barman_or_salesman', models.BooleanField()),
                ('worker_proposal_comments', models.TextField(blank=True, max_length=1000)),
                ('worker_docs_valid', models.BooleanField()),
                ('worker_docs_comments', models.TextField(blank=True, max_length=1000)),
                ('license_recommendation', models.BooleanField()),
                ('recommendation_comments', models.TextField(blank=True, max_length=1000)),
                ('special_remarks', models.TextField(blank=True, max_length=2000)),
                ('reporting_place', models.CharField(blank=True, max_length=250)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='site_enquiry_report', to='licenseapplication.licenseapplication')),
            ],
            options={
                'db_table': 'site_enquiry_report',
                'ordering': ['created_at'],
            },
        ),
    ]
